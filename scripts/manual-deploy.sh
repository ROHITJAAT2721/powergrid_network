#!/bin/bash

echo "🚀 PowerGrid Network Manual Deployment Guide"
echo "=============================================="
echo ""
echo "Prerequisites:"
echo "1. substrate-contracts-node running on port 9944"
echo "2. All contracts built (./scripts/build-all.sh)"
echo ""
echo "Follow these steps one by one:"
echo ""

echo "📋 STEP 1: Deploy PowerGrid Token"
echo "=================================="
echo "cd ~/powergrid_network/contracts/token"
echo ""
echo "cargo contract instantiate \\"
echo "    --constructor new \\"
echo "    --args '\"PowerGrid Token\"' '\"PGT\"' 18 1000000000000000000000 \\"
echo "    --suri //Alice \\"
echo "    --url ws://localhost:9944 \\"
echo "    --execute \\"
echo "    --skip-confirm \\"
echo "    --skip-dry-run \\"
echo "    --gas 1000000000000 \\"
echo "    --proof-size 1000000 \\"
echo "    --value 0"
echo ""
echo "📝 Copy the CONTRACT ADDRESS from the output (line starting with 'Contract')"
echo "📝 Save as TOKEN_ADDR for next steps"
echo ""
echo "Press Enter to continue..."
read

echo "📋 STEP 2: Deploy Resource Registry"
echo "==================================="
echo "cd ~/powergrid_network/contracts/resource_registry"
echo ""
echo "cargo contract instantiate \\"
echo "    --constructor new \\"
echo "    --args 1000000000000000000 \\"
echo "    --suri //Alice \\"
echo "    --url ws://localhost:9944 \\"
echo "    --execute \\"
echo "    --skip-confirm \\"
echo "    --skip-dry-run \\"
echo "    --gas 1000000000000 \\"
echo "    --proof-size 1000000 \\"
echo "    --value 0"
echo ""
echo "📝 Copy the CONTRACT ADDRESS from the output"
echo "📝 Save as REGISTRY_ADDR for next steps"
echo ""
echo "Press Enter to continue..."
read

echo "📋 STEP 3: Deploy Grid Service"
echo "==============================="
echo "cd ~/powergrid_network/contracts/grid_service"
echo ""
echo "⚠️  IMPORTANT: Replace TOKEN_ADDR and REGISTRY_ADDR with actual addresses!"
echo ""
echo "cargo contract instantiate \\"
echo "    --constructor new \\"
echo "    --args TOKEN_ADDR REGISTRY_ADDR \\"
echo "    --suri //Alice \\"
echo "    --url ws://localhost:9944 \\"
echo "    --execute \\"
echo "    --skip-confirm \\"
echo "    --skip-dry-run \\"
echo "    --gas 1000000000000 \\"
echo "    --proof-size 1000000 \\"
echo "    --value 0"
echo ""
echo "📝 Copy the CONTRACT ADDRESS from the output"
echo "📝 Save as GRID_ADDR for next steps"
echo ""
echo "Press Enter to continue..."
read

echo "📋 STEP 4: Deploy Governance"
echo "============================="
echo "cd ~/powergrid_network/contracts/governance"
echo ""
echo "⚠️  IMPORTANT: Replace TOKEN_ADDR, REGISTRY_ADDR, and GRID_ADDR with actual addresses!"
echo ""
echo "cargo contract instantiate \\"
echo "    --constructor new \\"
echo "    --args TOKEN_ADDR REGISTRY_ADDR GRID_ADDR 100000000000000000000 100 51 \\"
echo "    --suri //Alice \\"
echo "    --url ws://localhost:9944 \\"
echo "    --execute \\"
echo "    --skip-confirm \\"
echo "    --skip-dry-run \\"
echo "    --gas 1000000000000 \\"
echo "    --proof-size 1000000 \\"
echo "    --value 0"
echo ""
echo "📝 Copy the CONTRACT ADDRESS from the output"
echo "📝 Save as GOV_ADDR"
echo ""
echo "Press Enter to continue..."
read

echo "📋 STEP 5: Create Deployment File"
echo "=================================="
echo "cd ~/powergrid_network"
echo ""
echo "Create deployment/local-addresses.json with your contract addresses:"
echo ""
echo "mkdir -p deployment"
echo ""
echo "cat > deployment/local-addresses.json << 'EOF'"
echo "{"
echo "  \"contracts\": {"
echo "    \"powergrid_token\": \"YOUR_TOKEN_ADDRESS\","
echo "    \"resource_registry\": \"YOUR_REGISTRY_ADDRESS\","
echo "    \"grid_service\": \"YOUR_GRID_ADDRESS\","
echo "    \"governance\": \"YOUR_GOVERNANCE_ADDRESS\""
echo "  },"
echo "  \"network\": \"local\","
echo "  \"deployed_at\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\","
echo "  \"deployer\": \"//Alice\""
echo "}"
echo "EOF"
echo ""
echo "🎉 All contracts deployed successfully!"
echo ""
echo "📋 Next Steps:"
echo "1. Update the deployment file with your actual contract addresses"
echo "2. Run: ./scripts/test-interactions.sh (if needed for Milestone 2)"
echo "3. All Milestone 1 deliverables are now complete!"